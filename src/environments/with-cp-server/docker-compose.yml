---
version: '3.8'
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:VERSION
    restart: on-failure:3
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-txn-logs:/var/lib/zookeeper/log

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-server:VERSION
    hostname: kafka1
    ports:
      - 9092:9092
    restart: on-failure:3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_CONFLUENT_LICENSE: ${CONFLUENT_LICENSE}
      KAFKA_CONFLUENT_TELEMETRY_ENABLED: "false"
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: "false"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: state.change.logger=INFO
    volumes:
      - /tmp/cpdocker/volumes/kafka/config:/volumes
      - kafka1-data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  kafka2:
    container_name: kafka2
    image: confluentinc/cp-server:VERSION
    hostname: kafka2
    ports:
      - 19092:19092
    restart: on-failure:3
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:19092
      KAFKA_CONFLUENT_LICENSE: ${CONFLUENT_LICENSE}
      KAFKA_CONFLUENT_TELEMETRY_ENABLED: "false"
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: "false"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: state.change.logger=INFO
    volumes:
      - /tmp/cpdocker/volumes/kafka/config:/volumes
      - kafka2-data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  kafka3:
    container_name: kafka3
    image: confluentinc/cp-server:VERSION
    hostname: kafka3
    ports:
      - 29092:29092
    restart: on-failure:3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29092
      KAFKA_CONFLUENT_LICENSE: ${CONFLUENT_LICENSE}
      KAFKA_CONFLUENT_TELEMETRY_ENABLED: "false"
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: "false"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: state.change.logger=INFO
    volumes:
      - /tmp/cpdocker/volumes/kafka/config:/volumes
      - kafka3-data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  schemaregistry:
    image: confluentinc/cp-schema-registry:VERSION
    container_name: schemaregistry
    hostname: schemaregistry
    ports:
      - 8081:8081
    restart: on-failure:3
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:19092,kafka3:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
      SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL: none
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
    depends_on:
      - kafka1
      - kafka2
      - kafka3

  connect:
    image: confluentinc/cp-kafka-connect:VERSION
    container_name: connect
    restart: on-failure:3
    hostname: "connect"
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:19092,kafka3:29092
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_LISTENERS: https://0.0.0.0:8083
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-statuses
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components,/volumes"
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
    volumes:
      - /tmp/cpdocker/volumes/connect:/volumes
      - kafka-connect:/usr/share/confluent-hub-components

    depends_on:
      - kafka1
      - kafka2
      - kafka3

  restproxy:
    image: confluentinc/cp-kafka-rest:VERSION
    ports:
      - 8082:8082
    hostname: restproxy
    container_name: restproxy
    environment:
      KAFKA_REST_HOST_NAME: restproxy
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:19092,kafka3:29092
      KAFKA_REST_CLIENT_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:19092,kafka3:29092
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - schemaregistry

  controlcenter:
    container_name: controlcenter
    image: confluentinc/cp-enterprise-control-center:VERSION
    hostname: controlcenter
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:19092,kafka3:29092
      CONTROL_CENTER_REPLICATION_FACTOR: 3
      PORT: 9021
    volumes:
      - confluent-control-center:/var/lib/confluent-control-center
    depends_on:
      - kafka1
      - kafka2
      - kafka3

  ksqldb:
    container_name: ksqldb
    image: confluentinc/cp-ksqldb-server:VERSION
    hostname: ksqldb
    ports:
      - "8088:8088"
    environment:
      KSQL_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:19092,kafka3:29092
      KSQL_KSQL_SERVICE_ID: ksqldb
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schemaregistry:8081
      KSQL_LISTENERS: http://0.0.0.0:8088
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - schemaregistry

volumes:
  zookeeper-data:
  zookeeper-txn-logs:
  kafka1-data:
  kafka2-data:
  kafka3-data:
  kafka-connect:
  confluent-control-center:
